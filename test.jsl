;; shortens def/fn
(defmacro defn [name args body]
  (array 'def name (array 'fn 'args body)))

;; evaluates test. if true, evaluates then
(defmacro when [test then]
  (array 'if test then null))
 
;; computes n!
(defn fact [n]
  (if (<= n 2)
    n
    (* n (fact (- n 1)))))

(print (fact 5))

(when false
  (print "you shouldn't see me printed!"))
